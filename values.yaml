# Default values for boundary-chart.
# This is a YAML-formatted file. UPDATED!
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: hashicorp/boundary
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: "boundary"
fullnameOverride: "boundary"

publicAddress: 192.168.1.1
publicPort: 30202

database:
  url: postgres
  port: 5432
  dbName: boundary
  ssl: false
  username: postgres
  password: postgres

aead:
  enabled: true
  keys:
    root: D0vmvzf8l+C709nVfEH3hgBCj6IF/1eb9kCTYTtnDVc=
    recovery: Ivj8Si8UQBp+Zm2lLbUDTxOGikE8rSo6QihCjWSTXqY=
    worker-auth: 8Aj2j2JpFmY1WdjKcmETyYwUi7njP74MLVXWNov4rZ8=

vault:
  enabled: false
  # Use form `protocol://fqdn:port`
  fqdn: https://vault.home.lan:443
  mountPath: local-kms
  tlsSkipVerify: true
  # Select whether or not to mount in an externally-created token for management of Vault
  managementToken:
    enabled: true
    envName: VAULT_TOKEN
    secretName: vault-token-crpgv
  # Pull DB credentials from Vault
  database:
    enabled: true
    # admin creds
    vaultAdminCredPath: postgres/static-creds/boundary-db
    # boundary creds
    vaultCredPath: postgres/creds/boundary-db
    vaultDbRole: boundary

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {
  "consul.hashicorp.com/connect-inject": "false"
}

podSecrets:
  - secretName: vault-token-crpgv
    keyName: token

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  - type: ClusterIP
    ports:
      - name: api
        number: 9200
      - name: cluster
        number: 9201
  - type: NodePort
    # Annotations to add to the service of type LoadBalancer
    annotations: {}
    # IP whitelisting for service of type LoadBalancer
    loadBalancerSourceRanges: []
    ports:
      - name: data
        number: 9202

ingress:
  enabled: true
  className: nginx
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: boundary.home.lan
      paths:
        - path: /
          pathType: ImplementationSpecific
          port: api
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

extraLabels: {}
